<p>Available Games</p>
      <div className="grid grid-cols-3 gap-4 p-5">
        {fetchAllGame &&
          fetchAllGame.map((data, idx) => (
            <Card className="w-[350px]">
              <CardHeader>
                <CardTitle className="text-xl text-center">Game</CardTitle>
                {/* <CardDescription>
                  Deploy your new project in one-click.
                </CardDescription> */}
              </CardHeader>
              <CardContent className="grid place-content-center text-2xl">
                {data && data.id}
              </CardContent>
              <CardFooter className="flex justify-between w-full">
                {data &&
                data.player2 &&
                data.player1 &&
                (data.player2.toLowerCase() === address.toLowerCase() ||
                  data.player1.toLowerCase() === address.toLowerCase()) ? (
                  <Button size={"sm"} className="w-full">
                    Join left game
                  </Button>
                ) : data && data.player2 ? (
                  <Button disabled size={"sm"} className="w-full">
                    Game Full
                  </Button>
                ) : (
                  <Button size={"sm"} className="w-full">
                    Join Game
                  </Button>
                )}
              </CardFooter>
            </Card>
          ))}
      </div>

      !fetchAllGame ? (
            fetchAllGame &&
            fetchAllGame.map((data, idx) => (
              <Card className="w-[350px] h-full" key={idx}>
                <CardHeader>
                  <CardTitle className="text-xl text-center">Game</CardTitle>
                  {/* <CardDescription>
                  Deploy your new project in one-click.
                </CardDescription> */}
                </CardHeader>
                <CardContent className="grid place-content-center text-2xl">
                  {data && data.id}
                </CardContent>
                <CardFooter className="flex justify-between w-full">
                  {data &&
                  data.player2 &&
                  data.player1 &&
                  (data.player2.toLowerCase() === address.toLowerCase() ||
                    data.player1.toLowerCase() === address.toLowerCase()) ? (
                    <Button size={"sm"} className="w-full">
                      Join left game
                    </Button>
                  ) : data && data.player2 ? (
                    <Button disabled size={"sm"} className="w-full">
                      Game Full
                    </Button>
                  ) : (
                    <Button
                      onClick={() => {
                        handleSubmit();
                        handleSubmit();
                      }}
                      size={"sm"}
                      className="w-full"
                    >
                      Join Game
                    </Button>
                  )}
                </CardFooter>
              </Card>
            ))
          ) : (