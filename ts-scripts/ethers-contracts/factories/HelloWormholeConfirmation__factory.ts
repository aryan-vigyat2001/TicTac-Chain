/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelloWormholeConfirmation,
  HelloWormholeConfirmationInterface,
} from "../HelloWormholeConfirmation";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "NotAnEvmAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingSuccess",
    type: "event",
  },
  {
    inputs: [],
    name: "latestConfirmedSentGreeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestGreeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteConfirmation",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "receiverValue",
        type: "uint256",
      },
    ],
    name: "quoteCrossChainGreeting",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "deliveryHash",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "seenDeliveryVaaHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "receiverValueForSecondDeliveryPayment",
        type: "uint256",
      },
    ],
    name: "sendCrossChainGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
    ],
    name: "setRegisteredSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516111cc3803806111cc83398101604081905261002f91610074565b6001600160a01b039182166080521660a052600180546001600160a01b031916331790556100a7565b80516001600160a01b038116811461006f57600080fd5b919050565b6000806040838503121561008757600080fd5b61009083610058565b915061009e60208401610058565b90509250929050565b60805160a0516110dd6100ef60003960006101240152600081816101c6015281816102c101528181610529015281816106a3015281816107af01526108d101526110dd6000f3fe6080604052600436106100915760003560e01c8063921b58a911610059578063921b58a914610171578063a78de30b14610186578063da25b725146101b4578063dd12d68b146101e8578063f88adcca1461020857600080fd5b8063180f6cc21461009657806330e1a237146100db578063529dca32146100fd57806384acd1bb146101125780638a28c31f1461015e575b600080fd5b3480156100a257600080fd5b506100c66100b1366004610a07565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100e757600080fd5b506100f0610228565b6040516100d29190610a7c565b61011061010b366004610b7a565b6102b6565b005b34801561011e57600080fd5b506101467f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d2565b61011061016c366004610c9b565b610687565b34801561017d57600080fd5b506100f0610777565b34801561019257600080fd5b506101a66101a1366004610d17565b610784565b6040519081526020016100d2565b3480156101c057600080fd5b506101467f000000000000000000000000000000000000000000000000000000000000000081565b3480156101f457600080fd5b50610110610203366004610d32565b610828565b34801561021457600080fd5b506101a6610223366004610d32565b6108a5565b6004805461023590610d5c565b80601f016020809104026020016040519081016040528092919081815260200182805461026190610d5c565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b505050505081565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461033e5760405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b60648201526084015b60405180910390fd5b61ffff821660009081526002602052604090205482908490811461039c5760405162461bcd60e51b81526020600482015260156024820152742737ba103932b3b4b9ba32b932b21039b2b73232b960591b6044820152606401610335565b600083815260208190526040902054839060ff16156103fd5760405162461bcd60e51b815260206004820152601960248201527f4d65737361676520616c72656164792070726f636573736564000000000000006044820152606401610335565b6000818152602081815260408220805460ff19166001179055895161042991908b018101908b01610da5565b9050600081600181111561043f5761043f610dc0565b036105f7576000808a80602001905181019061045b9190610dd6565b8151919450925061047491506003906020850190610977565b507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b78405054676600389836040516104a993929190610e74565b60405180910390a160006104bc89610784565b9050803410156105275760405162461bcd60e51b815260206004820152603060248201527f4469646e2774207265636569766520656e6f7567682076616c756520666f722060448201526f746865207365636f6e642073656e642160801b6064820152608401610335565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd02828b6105618e61094b565b6001888860405160200161057793929190610f45565b604051602081830303815290604052600061c3506040518763ffffffff1660e01b81526004016105ab959493929190610f94565b60206040518083038185885af11580156105c9573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105ee9190610fd6565b5050505061067c565b600181600181111561060b5761060b610dc0565b0361067c576000808a8060200190518101906106279190610dd6565b92509250507f6aa04bb8658fed64f72b804aa21b2ef8ec8c344788d23dda61fc51254f407d3e828260405161065d929190611000565b60405180910390a18151610678906004906020850190610977565b5050505b505050505050505050565b600061069385836108a5565b90508034146106a157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634b5ca6f4828787600088336040516020016106e993929190610f45565b60408051601f19818403018152908290526005546001600160e01b031960e088901b16835261072c9493928a91620864709161ffff90911690339060040161102a565b60206040518083038185885af115801561074a573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061076f9190610fd6565b505050505050565b6003805461023590610d5c565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa1580156107fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108219190611083565b5092915050565b6001546001600160a01b0316331461088e5760405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b6064820152608401610335565b61ffff909116600090815260026020526040902055565b60405163c23ee3c360e01b815261ffff83166004820152602481018290526208647060448201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109439190611083565b509392505050565b600060a082901c156109735760405163033b960d60e41b815260048101839052602401610335565b5090565b82805461098390610d5c565b90600052602060002090601f0160209004810192826109a557600085556109eb565b82601f106109be57805160ff19168380011785556109eb565b828001600101855582156109eb579182015b828111156109eb5782518255916020019190600101906109d0565b506109739291505b8082111561097357600081556001016109f3565b600060208284031215610a1957600080fd5b5035919050565b60005b83811015610a3b578181015183820152602001610a23565b83811115610a4a576000848401525b50505050565b60008151808452610a68816020860160208601610a20565b601f01601f19169290920160200192915050565b602081526000610a8f6020830184610a50565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ad557610ad5610a96565b604052919050565b600067ffffffffffffffff821115610af757610af7610a96565b50601f01601f191660200190565b6000610b18610b1384610add565b610aac565b9050828152838383011115610b2c57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610b5457600080fd5b610a8f83833560208501610b05565b803561ffff81168114610b7557600080fd5b919050565b600080600080600060a08688031215610b9257600080fd5b853567ffffffffffffffff80821115610baa57600080fd5b610bb689838a01610b43565b9650602091508188013581811115610bcd57600080fd5b8801601f81018a13610bde57600080fd5b803582811115610bf057610bf0610a96565b8060051b610bff858201610aac565b918252828101850191858101908d841115610c1957600080fd5b86850192505b83831015610c5557823586811115610c375760008081fd5b610c458f8983890101610b43565b8352509186019190860190610c1f565b809a505050505050505060408601359250610c7260608701610b63565b949793965091946080013592915050565b6001600160a01b0381168114610c9857600080fd5b50565b60008060008060808587031215610cb157600080fd5b610cba85610b63565b93506020850135610cca81610c83565b9250604085013567ffffffffffffffff811115610ce657600080fd5b8501601f81018713610cf757600080fd5b610d0687823560208401610b05565b949793965093946060013593505050565b600060208284031215610d2957600080fd5b610a8f82610b63565b60008060408385031215610d4557600080fd5b610d4e83610b63565b946020939093013593505050565b600181811c90821680610d7057607f821691505b602082108103610d9057634e487b7160e01b600052602260045260246000fd5b50919050565b805160028110610b7557600080fd5b600060208284031215610db757600080fd5b610a8f82610d96565b634e487b7160e01b600052602160045260246000fd5b600080600060608486031215610deb57600080fd5b610df484610d96565b9250602084015167ffffffffffffffff811115610e1057600080fd5b8401601f81018613610e2157600080fd5b8051610e2f610b1382610add565b818152876020838501011115610e4457600080fd5b610e55826020830160208601610a20565b8094505050506040840151610e6981610c83565b809150509250925092565b60608152600080855481600182811c915080831680610e9457607f831692505b60208084108203610eb357634e487b7160e01b86526022600452602486fd5b6060880184905260808801828015610ed25760018114610ee357610f0e565b60ff19871682528282019750610f0e565b60008d81526020902060005b87811015610f0857815484820152908601908401610eef565b83019850505b5050859650610f228189018b61ffff169052565b505050505050610f3d60408301846001600160a01b03169052565b949350505050565b600060028510610f6557634e487b7160e01b600052602160045260246000fd5b84825260606020830152610f7c6060830185610a50565b905060018060a01b0383166040830152949350505050565b61ffff861681526001600160a01b038516602082015260a060408201819052600090610fc290830186610a50565b606083019490945250608001529392505050565b600060208284031215610fe857600080fd5b815167ffffffffffffffff81168114610a8f57600080fd5b6040815260006110136040830185610a50565b905060018060a01b03831660208301529392505050565b600061ffff808a16835260018060a01b03808a16602085015260e0604085015261105760e085018a610a50565b925087606085015286608085015281861660a085015280851660c0850152505098975050505050505050565b6000806040838503121561109657600080fd5b50508051602090910151909290915056fea2646970667358221220e9f2cdb0548697f8bbc2b67bd9dd86f44bc627a86dfddd6f42208f72ef54d75264736f6c634300080d0033";

type HelloWormholeConfirmationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeConfirmationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormholeConfirmation__factory extends ContractFactory {
  constructor(...args: HelloWormholeConfirmationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormholeConfirmation> {
    return super.deploy(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    ) as Promise<HelloWormholeConfirmation>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): HelloWormholeConfirmation {
    return super.attach(address) as HelloWormholeConfirmation;
  }
  override connect(signer: Signer): HelloWormholeConfirmation__factory {
    return super.connect(signer) as HelloWormholeConfirmation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeConfirmationInterface {
    return new utils.Interface(_abi) as HelloWormholeConfirmationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormholeConfirmation {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HelloWormholeConfirmation;
  }
}
