/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelloWormholeProtections,
  HelloWormholeProtectionsInterface,
} from "../HelloWormholeProtections";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "latestGreeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteCrossChainGreeting",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "deliveryHash",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "seenDeliveryVaaHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "sendCrossChainGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "sourceAddress",
        type: "bytes32",
      },
    ],
    name: "setRegisteredSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d8d380380610d8d83398101604081905261002f91610074565b6001600160a01b039182166080521660a052600180546001600160a01b031916331790556100a7565b80516001600160a01b038116811461006f57600080fd5b919050565b6000806040838503121561008757600080fd5b61009083610058565b915061009e60208401610058565b90509250929050565b60805160a051610cac6100e1600039600061012d01526000818161019b015281816101f8015281816102e401526103680152610cac6000f3fe60806040526004361061007b5760003560e01c806384acd1bb1161004e57806384acd1bb1461011b578063921b58a914610167578063da25b72514610189578063dd12d68b146101bd57600080fd5b80630f4b629a14610080578063180f6cc21461009557806328bd75ce146100da578063529dca3214610108575b600080fd5b61009361008e3660046107b2565b6101dd565b005b3480156100a157600080fd5b506100c56100b0366004610826565b60006020819052908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156100e657600080fd5b506100fa6100f536600461083f565b6102b9565b6040519081526020016100d1565b610093610116366004610881565b61035d565b34801561012757600080fd5b5061014f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d1565b34801561017357600080fd5b5061017c610532565b6040516100d191906109e6565b34801561019557600080fd5b5061014f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101c957600080fd5b506100936101d83660046109f9565b6105c0565b60006101e8846102b9565b90508034146101f657600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd02828686863360405160200161023b929190610a23565b604051602081830303815290604052600061c3506040518763ffffffff1660e01b815260040161026f959493929190610a4d565b60206040518083038185885af115801561028d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906102b29190610a8f565b5050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610ab9565b5092915050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103e55760405162461bcd60e51b815260206004820152602260248201527f4d73672e73656e646572206973206e6f7420576f726d686f6c652052656c617960448201526132b960f11b60648201526084015b60405180910390fd5b61ffff82166000908152600260205260409020548290849081146104435760405162461bcd60e51b81526020600482015260156024820152742737ba103932b3b4b9ba32b932b21039b2b73232b960591b60448201526064016103dc565b600083815260208190526040902054839060ff16156104a45760405162461bcd60e51b815260206004820152601960248201527f4d65737361676520616c72656164792070726f6365737365640000000000000060448201526064016103dc565b6000818152602081815260408220805460ff19166001179055895182916104d1918c018101908c01610add565b815191935091506104e990600390602085019061063d565b507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b784050546766003888360405161051e93929190610ba5565b60405180910390a150505050505050505050565b6003805461053f90610b6b565b80601f016020809104026020016040519081016040528092919081815260200182805461056b90610b6b565b80156105b85780601f1061058d576101008083540402835291602001916105b8565b820191906000526020600020905b81548152906001019060200180831161059b57829003601f168201915b505050505081565b6001546001600160a01b031633146106265760405162461bcd60e51b8152602060048201526024808201527f4e6f7420616c6c6f77656420746f207365742072656769737465726564207365604482015263373232b960e11b60648201526084016103dc565b61ffff909116600090815260026020526040902055565b82805461064990610b6b565b90600052602060002090601f01602090048101928261066b57600085556106b1565b82601f1061068457805160ff19168380011785556106b1565b828001600101855582156106b1579182015b828111156106b1578251825591602001919060010190610696565b506106bd9291506106c1565b5090565b5b808211156106bd57600081556001016106c2565b803561ffff811681146106e857600080fd5b919050565b6001600160a01b038116811461070257600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561074457610744610705565b604052919050565b600067ffffffffffffffff82111561076657610766610705565b50601f01601f191660200190565b60006107876107828461074c565b61071b565b905082815283838301111561079b57600080fd5b828260208301376000602084830101529392505050565b6000806000606084860312156107c757600080fd5b6107d0846106d6565b925060208401356107e0816106ed565b9150604084013567ffffffffffffffff8111156107fc57600080fd5b8401601f8101861361080d57600080fd5b61081c86823560208401610774565b9150509250925092565b60006020828403121561083857600080fd5b5035919050565b60006020828403121561085157600080fd5b61085a826106d6565b9392505050565b600082601f83011261087257600080fd5b61085a83833560208501610774565b600080600080600060a0868803121561089957600080fd5b853567ffffffffffffffff808211156108b157600080fd5b6108bd89838a01610861565b96506020915081880135818111156108d457600080fd5b8801601f81018a136108e557600080fd5b8035828111156108f7576108f7610705565b8060051b61090685820161071b565b918252828101850191858101908d84111561092057600080fd5b86850192505b8383101561095c5782358681111561093e5760008081fd5b61094c8f8983890101610861565b8352509186019190860190610926565b809a505050505050505060408601359250610979606087016106d6565b949793965091946080013592915050565b60005b838110156109a557818101518382015260200161098d565b838111156109b4576000848401525b50505050565b600081518084526109d281602086016020860161098a565b601f01601f19169290920160200192915050565b60208152600061085a60208301846109ba565b60008060408385031215610a0c57600080fd5b610a15836106d6565b946020939093013593505050565b604081526000610a3660408301856109ba565b905060018060a01b03831660208301529392505050565b61ffff861681526001600160a01b038516602082015260a060408201819052600090610a7b908301866109ba565b606083019490945250608001529392505050565b600060208284031215610aa157600080fd5b815167ffffffffffffffff8116811461085a57600080fd5b60008060408385031215610acc57600080fd5b505080516020909101519092909150565b60008060408385031215610af057600080fd5b825167ffffffffffffffff811115610b0757600080fd5b8301601f81018513610b1857600080fd5b8051610b266107828261074c565b818152866020838501011115610b3b57600080fd5b610b4c82602083016020860161098a565b8094505050506020830151610b60816106ed565b809150509250929050565b600181811c90821680610b7f57607f821691505b602082108103610b9f57634e487b7160e01b600052602260045260246000fd5b50919050565b60608152600080855481600182811c915080831680610bc557607f831692505b60208084108203610be457634e487b7160e01b86526022600452602486fd5b6060880184905260808801828015610c035760018114610c1457610c3f565b60ff19871682528282019750610c3f565b60008d81526020902060005b87811015610c3957815484820152908601908401610c20565b83019850505b5050859650610c538189018b61ffff169052565b505050505050610c6e60408301846001600160a01b03169052565b94935050505056fea2646970667358221220fe803c3fad2e4e7df772462008553042705622ce67b43d9b8b572729437005b064736f6c634300080d0033";

type HelloWormholeProtectionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeProtectionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormholeProtections__factory extends ContractFactory {
  constructor(...args: HelloWormholeProtectionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormholeProtections> {
    return super.deploy(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    ) as Promise<HelloWormholeProtections>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    _wormhole: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _wormholeRelayer,
      _wormhole,
      overrides || {}
    );
  }
  override attach(address: string): HelloWormholeProtections {
    return super.attach(address) as HelloWormholeProtections;
  }
  override connect(signer: Signer): HelloWormholeProtections__factory {
    return super.connect(signer) as HelloWormholeProtections__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeProtectionsInterface {
    return new utils.Interface(_abi) as HelloWormholeProtectionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormholeProtections {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HelloWormholeProtections;
  }
}
